<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Submit Form</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65"
        crossorigin="anonymous">
    <link rel="stylesheet" href="../CSS/home.css">
</head>
<body>

    <!-- [Navbar content] -->

    <div class="content">
        <h1>Edit Submission Form</h1>
        <form id="editForm">
            <!-- [Form fields] -->
        </form>
    </div>

    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";
        import { getDatabase, ref, get, update } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-database.js";

        const firebaseConfig = {
            apiKey: "AIzaSyAHcabQDigUfzFQ63dy_kjiaqAPZB4edtI",
            authDomain: "codinganddevelopment-e7d2c.firebaseapp.com",
            databaseURL: "https://codinganddevelopment-e7d2c-default-rtdb.firebaseio.com",
            projectId: "codinganddevelopment-e7d2c",
            storageBucket: "codinganddevelopment-e7d2c.appspot.com",
            messagingSenderId: "991250122571",
            appId: "1:991250122571:web:25d3ea280f9b9c34db8ace"
        };

        // Initialize Firebase
        initializeApp(firebaseConfig);
        const database = getDatabase();

        // Function to get query parameter value by name
        function getQueryParam(name) {
            const urlSearchParams = new URLSearchParams(window.location.search);
            return urlSearchParams.get(name);
        }

        const formId = getQueryParam('id');  // Retrieve the unique identifier from URL

        // Function to populate the form with data from Firebase
        function loadFormData() {
            if (!formId) {
                console.error("No form ID provided.");
                return;
            }
            const dataRef = ref(database, 'Information/' + formId);
            // [Rest of the loadFormData function]
        }

        // [Rest of the script]
    </script>

    <!-- [Bootstrap and other scripts] -->
</body>
</html>
----------------------------------------------------------------
//Send Message to Firebase(4)
function sendMessage(Fname, Lname, email, number, N_organization, S_organization, C_organization, ST_organization, resources, additional) {
    const database = getDatabase();
    const auth = getAuth();

    // Get the currently signed-in user's UID
    const userId = auth.currentUser.uid;

    set(ref(database, 'Information/' + userId), {
        Fname: Fname,
        Lname: Lname,
        email: email,
        number: number,
        organization: N_organization,
        S_organization: S_organization,
        C_organization: C_organization,
        ST_organization: ST_organization,
        resources: resources,
        additional: additional,
        userId: userId  // Store user ID with form data
    })
    // [Rest of the function remains unchanged]
}
----------------------------------------------------------------
// Function to populate the form with data from Firebase
function loadFormData() {
    const auth = getAuth();
    const userId = auth.currentUser.uid; // Get the currently signed-in user's UID

    if (!userId) {
        console.error("User is not signed in.");
        return;
    }

    const dataRef = ref(database, 'Information/' + userId);
    get(dataRef).then((snapshot) => {
        if (snapshot.exists()) {
            let data = snapshot.val();
            // Verify that the data belongs to the current user
            if (data.userId === userId) {
                // Populate form fields
                // ...
            } else {
                console.error("You do not have permission to edit this data.");
            }
        } else {
            console.log("No data available");
        }
    }).catch((error) => {
        console.error(error);
    });
}

// [Rest of the code remains unchanged]
----------------------------------------------------------------
// Function to update data in Firebase
function updateFormData(e) {
    e.preventDefault();

    const auth = getAuth();
    const userId = auth.currentUser.uid; // Get the currently signed-in user's UID

    // [Get values from form fields]

    const updateRef = ref(database, 'Information/' + userId);
    update(updateRef, {
        // Updated data
        // ...
    })
    // [Rest of the function remains unchanged]
}
----------------------------------------------------------------
<script type="module">
  import { initializeApp } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";
  import { getDatabase, ref, set } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-database.js";
  import { getAuth, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-auth.js";

  const firebaseConfig = {
    apiKey: "AIzaSyAHcabQDigUfzFQ63dy_kjiaqAPZB4edtI",
    authDomain: "codinganddevelopment-e7d2c.firebaseapp.com",
    databaseURL: "https://codinganddevelopment-e7d2c-default-rtdb.firebaseio.com",
    projectId: "codinganddevelopment-e7d2c",
    storageBucket: "codinganddevelopment-e7d2c.appspot.com",
    messagingSenderId: "991250122571",
    appId: "1:991250122571:web:25d3ea280f9b9c34db8ace"
  };

  // Initialize Firebase
  const app = initializeApp(firebaseConfig);
  const database = getDatabase(app);
  const auth = getAuth(app);

  document.getElementById('registrationform').addEventListener('submit', formSubmit);

  function formSubmit(e) {
    e.preventDefault();
    // Get Values from the DOM
    let Fname = document.querySelector('#Fname').value;
    let Lname = document.querySelector('#Lname').value;
    let email = document.querySelector('#email').value;
    let number = document.querySelector('#number').value;
    let organization = document.querySelector('#N_organization').value;
    let S_organization = document.querySelector('#S_organization').value;
    let C_organization = document.querySelector('#C_organization').value;
    let ST_organization = document.querySelector('#ST_organization').value;
    let resources = document.querySelector('#resources').value;
    let additional = document.querySelector('#additional').value;

    // Check if the user is authenticated
    onAuthStateChanged(auth, (user) => {
      if (user) {
        sendMessage(user.uid, Fname, Lname, email, number, organization, S_organization, C_organization, ST_organization, resources, additional);
      } else {
        alert("You need to be logged in to submit this form.");
      }
    });
  }

  function sendMessage(userId, Fname, Lname, email, number, N_organization, S_organization, C_organization, ST_organization, resources, additional) {
    set(ref(database, 'Information/' + userId), {
      Fname: Fname,
      Lname: Lname,
      email: email,
      number: number,
      organization: N_organization,
      S_organization: S_organization,
      C_organization: C_organization,
      ST_organization: ST_organization,
      resources: resources,
      additional: additional,
      userId: userId
    }).then(() => {
      document.querySelector('.alert').style.display = 'block';
      setTimeout(function () {
        document.querySelector('.alert').style.display = 'none';
      }, 7000);
      document.getElementById('registrationform').reset();
    }).catch((error) => {
      alert(error.message);
    });
  }

  // Additional script elements...
</script>
------------------------------------------------------------------------------------
function formSubmit(e) {
    e.preventDefault();

    const userId = auth.currentUser.uid; // Ensure the current user's UID is obtained

    // Check if the user already has a submission
    const submissionRef = ref(database, 'Information/' + userId);
    get(submissionRef).then((snapshot) => {
        if (snapshot.exists()) {
            alert("You have already submitted a form. Please edit your existing submission.");
        } else {
            // If no submission exists, proceed to create a new one
            let Fname = document.querySelector('#Fname').value;
            let Lname = document.querySelector('#Lname').value;
            let email = document.querySelector('#email').value;
            let number = document.querySelector('#number').value;
            let organization = document.querySelector('#N_organization').value;
            let S_organization = document.querySelector('#S_organization').value;
            let C_organization = document.querySelector('#C_organization').value;
            let ST_organization = document.querySelector('#ST_organization').value;
            let resources = document.querySelector('#resources').value;
            let additional = document.querySelector('#additional').value;

            sendMessage(Fname, Lname, email, number, organization, S_organization, C_organization, ST_organization, resources, additional);
        }
    }).catch((error) => {
        console.error("Error fetching submission data: ", error);
    });
}
-----------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <!-- [Existing Head Content] -->
</head>
<body>
    <!-- [Existing Body Content Before Form] -->

    <div class="content">
        <form action="" method="POST" id="registrationform">
            <h1>Submission Form</h1>
            <div class="alert alert-success">Form Submitted Successfully</div>
            <div class="alert alert-error" style="display: none;">You have already submitted a form.</div>
            <!-- [Existing Form Fields] -->
            <button class="registerbutton" type="submit">Register</button>
        </form>
    </div>

    <script type="module">
        // [Existing Script Content]

        function formSubmit(e) {
            e.preventDefault();
            // [Existing formSubmit Logic]

            get(submissionRef).then((snapshot) => {
                if (snapshot.exists()) {
                    document.querySelector('.alert-error').style.display = 'block';
                    setTimeout(function () {
                        document.querySelector('.alert-error').style.display = 'none';
                    }, 7000);
                } else {
                    // [Existing Submission Logic]
                }
            }).catch((error) => {
                console.error("Error fetching submission data: ", error);
            });
        }

        // [Remaining Script Content]
    </script>

    <!-- [Existing Scripts for Bootstrap and Session Checks] -->
</body>
</html>
